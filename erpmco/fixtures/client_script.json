[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2025-02-07 13:04:29.572123",
  "module": "Erpmco",
  "name": "Work Order Get Stock Quantity",
  "script": "frappe.ui.form.on('Work Order', {\r\n    production_item: function (frm) {\r\n        // Fetch the item group for the selected production_item and set custom_manufacture_uom\r\n        if (frm.doc.production_item) {\r\n            frappe.db.get_value('Item', frm.doc.production_item, 'item_group', (r) => {\r\n                if (r && r.item_group) {\r\n                    // Check if the item group is \"FG\"\r\n                    if (r.item_group === 'FG' && !(frm.doc.item_name.toLowerCase().includes('loose') || frm.doc.item_name.includes('PFAD90RPKO10'))) {\r\n                        frm.set_value('custom_manufacture_uom', 'CT'); // Set to \"CT\" for FG\r\n                    } \r\n                    else {\r\n                        // Set to stock_uom for other item groups\r\n                        frappe.db.get_value('Item', frm.doc.production_item, 'stock_uom', (uom) => {\r\n                            if (uom && uom.stock_uom) {\r\n                                frm.set_value('custom_manufacture_uom', uom.stock_uom);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n    custom_qty_manufacture_: function (frm) {\r\n        if (frm.doc.custom_qty_manufacture_ && frm.doc.custom_manufacture_uom && frm.doc.production_item) {\r\n            frappe.call({\r\n                method: 'erpmco.overrides.work_order.get_converted_qty',\r\n                args: {\r\n                    item_code: frm.doc.production_item,\r\n                    uom: frm.doc.custom_manufacture_uom,\r\n                    qty: frm.doc.custom_qty_manufacture_\r\n                },\r\n                callback: function (r) {\r\n                    if (r.message) {\r\n                        frm.set_value('qty', r.message); // Set the converted qty\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2024-12-15 04:49:16.176329",
  "module": "Erpmco",
  "name": "Stock Entry Set Weight",
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n});\nfrappe.ui.form.on('Stock Entry Detail', {\n    item_code: function(frm, cdt, cdn) {\n        let row = locals[cdt][cdn];\n        if (row.item_code) {\n            frappe.db.get_doc('Item', row.item_code)\n                .then(item_doc => {\n                    row.custom_weight_per_unit = item_doc.weight_per_unit;\n                    row.custom_weight_uom = item_doc.custom_weight_uom;\n                });\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2024-12-31 16:43:46.522473",
  "module": "Erpmco",
  "name": "Work Order Fetch Operations",
  "script": "frappe.ui.form.on('Work Order', {\n\tcustom_routing_name: function (frm) {\n        if (frm.doc.custom_routing_name) {\n            frappe.call({\n                method: \"erpmco.overrides.work_order.fetch_operations\",\n                args: {\n                    routing_name: frm.doc.custom_routing_name\n                },\n                callback: function (r) {\n                    if (r.message) {\n                        frm.clear_table(\"operations\");\n                        r.message.forEach((row) => {\n                            let child = frm.add_child(\"operations\");\n                            child.operation = row.operation;\n                            child.workstation = row.workstation;\n                            child.time_in_mins = row.time_in_mins * frm.doc.qty;\n                            child.bom = frm.doc.bom_no;\n                        });\n                        frm.refresh_field(\"operations\");\n                    }\n                }\n            });\n        }\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2025-02-13 17:58:16.671780",
  "module": "Erpmco",
  "name": "Make Rate and Taxe Amount editable",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n});\n\nfrappe.ui.form.on('Purchase Taxes and Charges', {\n    charge_type: function(frm, cdt, cdn) {\n        let row = locals[cdt][cdn];\n        if (row.charge_type === 'On Net Total') {\n            // Open row editor and enable fields\n            let grid_row = frm.fields_dict[\"taxes\"].grid.get_row(cdn);\n            if (grid_row) {\n                grid_row.toggle_editable(\"rate\", true);\n                grid_row.toggle_editable(\"tax_amount\", true);\n            }\n            \n            //frappe.model.set_value(tax.doctype, tax.name, \"rate\", tax.rate);\n            \n            //frappe.model.set_value(cdt, cdn, \"tax_amount\", 0);\n            //frm.refresh_field(\"tax_amount\");\n        }\n    },\n    \n    tax_amount: function(frm, cdt, cdn) {\n        let tax = locals[cdt][cdn];\n        if (tax.charge_type === 'On Net Total') {\n            \n            let net_total = frm.doc.net_total || 1; // Avoid division by zero\n            let new_rate = (tax.tax_amount / net_total) * 100;\n    \n            // Update only the tax_rate field\n            frappe.model.set_value(cdt, cdn, \"rate\", new_rate);\n            frm.refresh_field(\"rate\"); // Refresh only tax_rate\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-02-13 18:03:31.133203",
  "module": "Erpmco",
  "name": "Purchase Invoice Make Rate and Taxe Amount editable",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n});\n\nfrappe.ui.form.on('Purchase Taxes and Charges', {\n    charge_type: function(frm, cdt, cdn) {\n        let row = locals[cdt][cdn];\n        if (row.charge_type === 'On Net Total') {\n            // Open row editor and enable fields\n            let grid_row = frm.fields_dict[\"taxes\"].grid.get_row(cdn);\n            if (grid_row) {\n                grid_row.toggle_editable(\"rate\", true);\n                grid_row.toggle_editable(\"tax_amount\", true);\n            }\n            \n            //frappe.model.set_value(tax.doctype, tax.name, \"rate\", tax.rate);\n            \n            //frappe.model.set_value(cdt, cdn, \"tax_amount\", 0);\n            //frm.refresh_field(\"tax_amount\");\n        }\n    },\n    \n    tax_amount: function(frm, cdt, cdn) {\n        let tax = locals[cdt][cdn];\n        if (tax.charge_type === 'On Net Total') {\n            \n            let net_total = frm.doc.net_total || 1; // Avoid division by zero\n            let new_rate = (tax.tax_amount / net_total) * 100;\n    \n            // Update only the tax_rate field\n            frappe.model.set_value(cdt, cdn, \"rate\", new_rate);\n            frm.refresh_field(\"rate\"); // Refresh only tax_rate\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2025-02-13 18:05:52.593712",
  "module": "Erpmco",
  "name": "Purchase Order Make Rate and Taxe Amount editable",
  "script": "frappe.ui.form.on('Purchase Order', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n});\n\nfrappe.ui.form.on('Purchase Taxes and Charges', {\n    charge_type: function(frm, cdt, cdn) {\n        let row = locals[cdt][cdn];\n        if (row.charge_type === 'On Net Total') {\n            // Open row editor and enable fields\n            let grid_row = frm.fields_dict[\"taxes\"].grid.get_row(cdn);\n            if (grid_row) {\n                grid_row.toggle_editable(\"rate\", true);\n                grid_row.toggle_editable(\"tax_amount\", true);\n            }\n            \n            //frappe.model.set_value(tax.doctype, tax.name, \"rate\", tax.rate);\n            \n            //frappe.model.set_value(cdt, cdn, \"tax_amount\", 0);\n            //frm.refresh_field(\"tax_amount\");\n        }\n    },\n    \n    tax_amount: function(frm, cdt, cdn) {\n        let tax = locals[cdt][cdn];\n        if (tax.charge_type === 'On Net Total') {\n            \n            let net_total = frm.doc.net_total || 1; // Avoid division by zero\n            let new_rate = (tax.tax_amount / net_total) * 100;\n    \n            // Update only the tax_rate field\n            frappe.model.set_value(cdt, cdn, \"rate\", new_rate);\n            frm.refresh_field(\"rate\"); // Refresh only tax_rate\n        }\n    }\n});",
  "view": "Form"
 }
]
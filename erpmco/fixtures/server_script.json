[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-31 17:26:54.253769",
  "module": "Erpmco",
  "name": "BOM Validate if Item is Linked to BOM",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Stock Entry",
  "script": "for i in doc.items:\n    if i.has_bom == 1 and i.bom_no == None:\n        frappe.throw(f\"Validate item {i.item_code} BOM before validating the current one\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-15 15:27:29.797883",
  "module": "Erpmco",
  "name": "Stock Entry Manufacture Adjust Additional costs",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Stock Entry",
  "script": "if doc.work_order and doc.stock_entry_type == \"Manufacture\":\r\n    work_order = frappe.get_doc(\"Work Order\", doc.work_order)\r\n\r\n    if bool(work_order.custom_use_detail_addtional_cost):\r\n        # Initialize variables\r\n        cost_dict = {}\r\n        total_cost_per_hour = 0\r\n        total_costs = doc.total_additional_costs\r\n        operations = work_order.get(\"operations\", [])\r\n\r\n        for operation in operations:\r\n            ws = frappe.get_doc(\"Workstation\", operation.workstation)\r\n            \r\n            for line in ws.get(\"custom_details\", []):\r\n                cost_dict[line.account] = cost_dict.get(line.account, 0) + line.cost\r\n                total_cost_per_hour = total_cost_per_hour + line.cost\r\n\r\n                    \r\n        # Clear `additional_costs` to avoid duplication\r\n        doc.additional_costs = []\r\n        for account, cost in cost_dict.items():\r\n            doc.append(\"additional_costs\", {\r\n                \"expense_account\": account,\r\n                \"account_currency\": \"USD\",\r\n                \"exchange_rate\": 1,\r\n                \"description\": \"Operating Cost as per Work Order / BOM\",\r\n                \"amount\": cost * total_costs / total_cost_per_hour,\r\n            })",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-15 15:27:40.624427",
  "module": "Erpmco",
  "name": "Stock Entry Manufacture Adjust Additional costs Before Save",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Stock Entry",
  "script": "#frappe.throw(\"OK\")\r\nif doc.work_order and doc.stock_entry_type == \"Manufacture\":\r\n    work_order = frappe.get_doc(\"Work Order\", doc.work_order)\r\n\r\n    if bool(work_order.custom_use_detail_addtional_cost):\r\n        # Initialize variables\r\n        cost_dict = {}\r\n        total_cost_per_hour = 0\r\n        total_costs = doc.total_additional_costs\r\n        operations = work_order.get(\"operations\", [])\r\n\r\n        for operation in operations:\r\n            ws = frappe.get_doc(\"Workstation\", operation.workstation)\r\n            \r\n            for line in ws.get(\"custom_details\", []):\r\n                cost_dict[line.account] = cost_dict.get(line.account, 0) + line.cost\r\n                total_cost_per_hour = total_cost_per_hour + line.cost\r\n\r\n                    \r\n        # Clear `additional_costs` to avoid duplication\r\n        doc.additional_costs = []\r\n        for account, cost in cost_dict.items():\r\n            doc.append(\"additional_costs\", {\r\n                \"expense_account\": account,\r\n                \"account_currency\": \"USD\",\r\n                \"exchange_rate\": 1,\r\n                \"description\": \"Operating Cost as per Work Order / BOM\",\r\n                \"amount\": cost * total_costs / total_cost_per_hour,\r\n            })",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-18 14:34:11.551286",
  "module": "Erpmco",
  "name": "Adjust Additional Costs",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Stock Entry",
  "script": "if doc.work_order and doc.stock_entry_type == \"Manufacture\":\r\n    work_order = frappe.get_doc(\"Work Order\", doc.work_order)\r\n\r\n    if bool(work_order.custom_use_detail_addtional_cost):\r\n        # Initialize variables\r\n        cost_dict = {}\r\n        total_cost_per_hour = 0\r\n        total_costs = doc.total_additional_costs\r\n        operations = work_order.get(\"operations\", [])\r\n\r\n        for operation in operations:\r\n            ws = frappe.get_doc(\"Workstation\", operation.workstation)\r\n            \r\n            for line in ws.get(\"custom_details\", []):\r\n                cost_dict[line.account] = cost_dict.get(line.account, 0) + line.cost\r\n                total_cost_per_hour = total_cost_per_hour + line.cost\r\n\r\n                    \r\n        # Clear `additional_costs` to avoid duplication\r\n        doc.additional_costs = []\r\n        for account, cost in cost_dict.items():\r\n            doc.append(\"additional_costs\", {\r\n                \"expense_account\": account,\r\n                \"account_currency\": \"USD\",\r\n                \"exchange_rate\": 1,\r\n                \"description\": \"Operating Cost as per Work Order / BOM\",\r\n                \"amount\": cost * total_costs / total_cost_per_hour,\r\n            })\r\n            \r\n            ",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2025-01-18 14:34:22.262736",
  "module": "Erpmco",
  "name": "Adjust Additional Costs Before Save",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Stock Entry",
  "script": "if doc.work_order and doc.stock_entry_type == \"Manufacture\":\r\n    work_order = frappe.get_doc(\"Work Order\", doc.work_order)\r\n\r\n    if bool(work_order.custom_use_detail_addtional_cost):\r\n        # Initialize variables\r\n        cost_dict = {}\r\n        total_cost_per_hour = 0\r\n        total_costs = doc.total_additional_costs\r\n        operations = work_order.get(\"operations\", [])\r\n\r\n        for operation in operations:\r\n            ws = frappe.get_doc(\"Workstation\", operation.workstation)\r\n            \r\n            for line in ws.get(\"custom_details\", []):\r\n                cost_dict[line.account] = cost_dict.get(line.account, 0) + line.cost\r\n                total_cost_per_hour = total_cost_per_hour + line.cost\r\n\r\n                    \r\n        # Clear `additional_costs` to avoid duplication\r\n        doc.additional_costs = []\r\n        for account, cost in cost_dict.items():\r\n            doc.append(\"additional_costs\", {\r\n                \"expense_account\": account,\r\n                \"account_currency\": \"USD\",\r\n                \"exchange_rate\": 1,\r\n                \"description\": \"Operating Cost as per Work Order / BOM\",\r\n                \"amount\": cost * total_costs / total_cost_per_hour,\r\n            })\r\n            \r\n            ",
  "script_type": "DocType Event"
 }
]